View(b)
c <- read.csv("~/Desktop/c.csv")
View(c)
d <- read.csv("~/Desktop/d.csv")
View(d)
r_a = cor(a$x,a$y)
r_b = cor(b$x,b$y)
r_c = cor(c$x,c$y)
r_d = cor(d$x,d$y)
slope_a = r_a*(sd(a$y)/sd(a$x))
slope_b = r_b*(sd(b$y)/sd(b$x))
slope_c = r_c*(sd(c$y)/sd(c$x))
slope_d = r_d*(sd(d$y)/sd(d$x))
y_a = mean(a$y)-slope_a*mean(a$x)
y_b = mean(b$y)-slope_b*mean(b$x)
y_c = mean(c$y)-slope_c*mean(c$x)
y_d = mean(d$y)-slope_d*mean(d$x)
plot(a$x,a$y)
plot(b$x,b$y)
library(datasets)
View(Swiss)
View(swiss)
lm(y~x,swiss)
model_1 = lm(Fertility~Education,swiss)
View(model_1)
summary(swiss$Fertility)
summary(swiss$Education)
summary(swiss$Catholic)
r_ef = cor(swiss$Education,swiss$Fertility)
s_educ = sd(swiss$Education)
s_fert = sd(swiss$Fertility)
beta_hat = r_ef*(s_fert/s_educ)
alpha_hat = mean(swiss$Fertility)-beta_hat*mean(swiss$Education)
alpha_hat +beta_hat*40
plot(swiss$Education,swiss$Fertility,xlab = "Education",ylab = "Fertility",main = "Education vs. Fertility")
summary(model_1)
r_squared = r_ef^2
abline(lm(Fertility~Education,swiss))
plot(swiss$Education, model_1$residuals, xlab = "Education", ylab = "Residuals")
plot(swiss$Education, model_1$residuals, xlab = "Education", ylab = "Residuals", main = "Education vs. Residuals")
mean(model_1$residuals)
lm(Fertility~Catholic,swiss)
model_2 = lm(Fertility~Catholic,swiss)
summary(model_2)
acs <- read.csv("~/Desktop/College/College Sem. 4/Stats/R Data Project/College Major Income/usa_00002.csv")
acs$YEAR=NULL
#The year was 2018 for every entry
acs$SAMPLE=NULL
#The sample was always 201801
acs$PERNUM=NULL
#I ony took observations from individuals, and this variable was not applicable
acs$RACED=NULL
#This variable is offering a more detailed analysis than I need. This is not the focus
#of my study.
acs$EMPSTATD=NULL
#I don't need this detailed of information. I'm only looking at employed people
#for my study.
acs$GRADEATT=NULL
acs$GRADEATTD=NULL
#People in school are not employed, so they will all be removed from my study anyways
acs$EDUC=NULL
#This variable isn't detailed enough for my study.
acs_use=subset(acs,acs$EDUCD>=101)
#Finally starting to create a new subset of my data. EDUCD>=65 includes only
#participates that have completed a bachelor's degree.
acs_use=subset(acs_use,acs_use$EMPSTAT==1)
#The only people I need for my project are people who are employed.
acs_use=subset(acs_use,acs_use$INCEARN !=-9999)
#Removing bottom code
acs_use$YOEDUC = ifelse(acs_use$EDUCD==101,17,(ifelse(acs_use$EDUCD<116,19,22)))
View(acs)
View(acs_use)
xbar_inc = mean(acs_use$INCEARN)
sd_inc = sd(acs_use$INCEARN)
summary(acs_use$INCEARN)
hist(acs_use$INCEARN)
acs_bachelors = subset(acs_use,acs_use$EDUCD==101)
n_b = length(acs_bachelors$INCEARN)
xbar_incb = mean(acs_bachelors$INCEARN)
sd_incb = sd(acs_bachelors$INCEARN)
summary(acs_bachelors$INCEARN)
acs_masters = subset(acs_use, acs_use$EDUCD==114)
n_m = length(acs_masters$INCEARN)
xbar_incm = mean(acs_masters$INCEARN)
sd_incm = sd(acs_masters$INCEARN)
summary(acs_masters$INCEARN)
acs_profd = subset(acs_use,acs_use$EDUCD==115)
n_profd = length(acs_profd$INCEARN)
xbar_incprofd = mean(acs_profd$INCEARN)
sd_incprofd = sd(acs_profd$INCEARN)
summary(acs_profd$INCEARN)
acs_doctorate = subset(acs_use,acs_use$EDUCD==116)
n_d = length(acs_doctorate$INCEARN)
xbar_incd = mean(acs_doctorate$INCEARN)
sd_incd = sd(acs_doctorate$INCEARN)
summary(acs_doctorate$INCEARN)
hist(acs_use$INCEARN, breaks = 100, xlab = "Income Earned", main = "Individual Earned Income
of College Graduates with Bachelor's, Master's, Professional, and Doctorate Degrees")
hist(acs_bachelors$INCEARN, breaks = 100,xlab = "Income Earned for People with a Bachelor's
Degree", main = "Individual Earned Income of College Graduates with a Bachelor's
Degree")
hist(acs_masters$INCEARN, breaks = 100,xlab = "Income Earned for People with a Master's
Degree", main = "Individual Earned Income of College Graduates with a Master's
Degree")
hist(acs_profd$INCEARN, breaks = 100,xlab = "Income Earned for People with a Professional
Degree Beyond a Bachelor's", main = "Individual Earned Income of College Graduates with a
Professional Degree Beyond a Bachelor's")
hist(acs_doctorate$INCEARN, breaks = 100,xlab = "Income Earned for People with a Doctorate
Degree", main = "Individual Earned Income of College Graduates with a Doctorate
Degree")
options(scipen=999)
hist(acs_profd$INCEARN, breaks = 100,xlab = "Income Earned for People with a Professional
Degree Beyond a Bachelor's", main = "Individual Earned Income of College Graduates with a
Professional Degree Beyond a Bachelor's")
MOE_m_b = sqrt((sd_incm^2/n_m)+(sd_incb^2/n_b))*abs(qnorm(.005))
CI_m_b = (xbar_incm - xbar_incb)+c(-1,1)*MOE_m_b
SE_m_b = sqrt((sd_incm^2/n_m)+(sd_incb^2/n_b))
z_m_b = (xbar_incm - xbar_incb) / SE_m_b
p_value_m_b = pnorm(z_m_b, lower.tail = FALSE)
MOE_p_b = sqrt((sd_incprofd^2/n_profd)+(sd_incb^2/n_b))*abs(qnorm(.005))
CI_p_b = (xbar_incprofd-xbar_incb)+c(-1,1)*MOE_p_b
SE_p_b = sqrt((sd_incprofd^2/n_profd)+(sd_incb^2/n_b))
#Standard error for the salaries of people with a professional and bachelor's degree
z_p_b = (xbar_incprofd-xbarinc_b)/SE_p_b
p_value_p_b = pnorm(z_p_b, lower.tail = FALSE)
SE_p_b = sqrt((sd_incprofd^2/n_profd)+(sd_incb^2/n_b))
#Standard error for the salaries of people with a professional and bachelor's degree
z_p_b = (xbar_incprofd-xbar_incb)/SE_p_b
p_value_p_b = pnorm(z_p_b, lower.tail = FALSE)
MOE_d_b = sqrt((sd_incd^2/n_d)+(sd_incb^2/n_b))*abs(qnorm(.005))
#Margin of error
CI_d_b = (xbar_incd-xbar_incb)+c(-1,1)*MOE_d_b
SE_d_b = sqrt((sd_incd^2/n_d)+(sd_incb^2/n_b))
#Standard error for the salaries of people with a professional and bachelor's degree
z_d_b = (xbar_incd-xbar_incb)/SE_d_b
p_value_d_b = pnorm(z_d_b, lower.tail = FALSE)
barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
axis(side = 2,at=seq(0,175000,25000))
average_income = c(xbar_inc,xbar_incb,xbar_incm,xbar_incd,xbar_incprofd)
barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
axis(side = 2,at=seq(0,175000,25000))
legend(x="Total Average", y = 125000, legend=c("Total average = $85,146","Bachelor's average = $72,535",
"Master's average = $88,997","Doctorate average = $117,258",
"Professional average = $158,691"), col = ranibow(6))
legend(legend=c("Total average = $85,146","Bachelor's average = $72,535",
"Master's average = $88,997","Doctorate average = $117,258",
"Professional average = $158,691"), col = ranibow(6))
legend(x = "Total Average", legend=c("Total average = $85,146","Bachelor's average = $72,535",
"Master's average = $88,997","Doctorate average = $117,258",
"Professional average = $158,691"), col = ranibow(6))
legend(x = "Total Average", "topleft", legend=c("Total average = $85,146","Bachelor's average = $72,535",
"Master's average = $88,997","Doctorate average = $117,258",
"Professional average = $158,691"), col = ranibow(6))
legend(x = "Total Average", y=125000, legend=c("Total average = $85,146","Bachelor's average = $72,535",
"Master's average = $88,997","Doctorate average = $117,258",
"Professional average = $158,691"), col = ranibow(6))
legend(x = "Total Average", y=NULL, legend=c("Total average = $85,146","Bachelor's average = $72,535",
"Master's average = $88,997","Doctorate average = $117,258",
"Professional average = $158,691"), col = ranibow(6))
barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), legend = TRUE, args.legend = list(bty = "n", x = "top"), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), legend = TRUE, args.legend = list(bty = "n", x = "top"), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
avg_bar = barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
text(avg_bar, average_income+0.4 , paste("$", average_income, sep="") ,cex=1)
text(avg_bar, average_income+1 , paste("$", average_income, sep="") ,cex=1)
avg_bar = barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
axis(side = 2,at=seq(0,175000,25000))
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"))
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691")
border = NULL)
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691")
border = FALSE)
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
border = FALSE)
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
horiz = FALSE)
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
horiz = TRUE)
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
)
avg_bar = barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
fill = c("red","yellow","green","lightblue","blue"))
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
fill = c("red","yellow","green","teel","blue"))
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
fill = c("red","yellow","green","light blue","blue"))
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
fill = c(rainbow(6)))
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
fill = c(rainbow(6)),bty = "n")
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
fill = c(rainbow(6)),bty = "o")
avg_bar = barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
fill = c(rainbow(6)),bty = "n")
plot(acs_use$YOEDUC,acs_use$INCTOT)
avg_bar = barplot(average_income, main = "Average Individual Income for Varying Levels of Completed Higher Education",
col = rainbow(6), names.arg = c("Total Average","Bachelor's",
"Master's", "Doctorate", "Professional"), xlab = "Level of Degree Completed",
ylab = "Average Individual Earned Income in USD", font.lab = 2, cex.main = 2, cex.lab = 1.2,ylim = c(0,175000))
legend("topleft",legend = c("Total average = $85,146","Bachelor's average = $72,535", "Master's average = $88,997",
"Doctorate average = $117,258","Professional average = $158,691"),
fill = c(rainbow(6)),bty = "n")
axis(side = 2,at=seq(0,175000,25000))
acs <- read.csv("~/Desktop/College/College Sem. 4/Stats/R Data Project/College Major Income/usa_00002.csv")
View(acs)
#Clean up
acs$YEAR=NULL
#The year was 2018 for every entry
acs$SAMPLE=NULL
#The sample was always 201801
acs$PERNUM=NULL
#I ony took observations from individuals, and this variable was not applicable
acs$RACED=NULL
acs$RACE=NULL
#This is not the focus of my study.
acs$EMPSTATD=NULL
#I don't need this detailed of information. I'm only looking at employed people
#for my study.
acs$GRADEATT=NULL
acs$GRADEATTD=NULL
#I only want people who have completed their college education.
acs$EDUC=NULL
#This variable isn't detailed enough for my study.
acs$DEGFIELD=NULL
acs$DEGFIELD2=NULL
acs$DEGFIELDD=NULL
acs$DEGFIELD2D=NULL
#My original idea involved using these variables, but I modified my study, so these variables didn't end up
#getting used.
acs$PERWT=NULL
#I'm pretty sure this is actually an incredibly important variable, and may have changed up my results a lot,
#but I could not figure out how to implement it in my study, and since I was working with such a large number
#of observations, the central limit theorem was still satisfied.
acs$INCTOT=NULL
#This variable accounted for more than earned income, and my study focused on earned income. I think
#a seperate study using this variable instead of INCEARN would be interesting to compare my own study to.
acs_use=subset(acs,acs$EDUCD>=101)
#Finally starting to create a new subset of my data. EDUCD>=65 includes only
#participates that have completed a bachelor's degree.
acs_use=subset(acs_use,acs_use$EMPSTAT==1)
#The only people I need for my project are people who are employed.
acs_use=subset(acs_use,acs_use$INCEARN !=-9999)
#Removing bottom code
View(acs_use)
acs_use$YOEDUC = ifelse(acs_use$EDUCD==101,17,(ifelse(acs_use$EDUCD<116,19,22)))
#I'm turning EDUCD into a quantitative variable by showing (roughly) the number of years required
#to obtain one of the four degrees I'm studying (bachelor's, master's, professional, and
#doctorate). YOEDUC stands for Years Of Education.
.73*(26.25/1.92)
7.71-9.98*.32
4.5164+9.980469*8
.73^2
(4.6-3.9)/(.6/5)
qt(.05,24)
qt(.05,24,lower.tail = FALSE)
75+50-52
qnorm(.1)
qnorm(.1,lower.tail = FALSE)
1.281552*7+263
b_population = 328200000*.13
w_population = 328200000*.62
bpk = (.25*1000)/b_population
wpk = (.44*1000)/w_population
bpk/wpk
# American population = 328.2 million = 328200000
# 13% of Americans are black
> b_pop = 328200000*.13
# b_pop = Black American population
# 62% of Americans are white
> w_pop = 328200000*.62
# w_pop = White American population
#####
# The American police kill about 1000 people per year (rounding up)
# 25% of the reported people killed by police officers are black
> bpk = (.25*1000)/b_population
# bpk = Fraction of American black population killed by police each year
# bpk = .00000216 = 0.000216%
# The police kill about .000216% of the black American population every year
# 44% of the reported people killed by police officers are white
> wpk = (.44*1000)/w_population
# wpk = Fraction of American white population killed by police each year
# wpk = .00000586 = 0.000586%
# The police kill about .000586% of the white American population every year
#####
> bpk/wpk
# = 2.70979
# According to the data, black Americans are 2.7 times more likely to be killed by police officers
> b_pop = 328200000*.13
# All data pulled from The Economist
# https://youtu.be/UGQEtHBMP08
#####
# American population = 328.2 million = 328200000
# 13% of Americans are black
b_pop = 328200000*.13
# b_pop = Black American population
# 62% of Americans are white
w_pop = 328200000*.62
# w_pop = White American population
#####
# The American police kill about 1000 people per year (rounding up)
# 25% of the reported people killed by police officers are black
bpk = (.25*1000)/b_population
# bpk = Fraction of American black population killed by police each year
# bpk = .00000216 = 0.000216%
# The police kill about .000216% of the black American population every year
# 44% of the reported people killed by police officers are white
> wpk = (.44*1000)/w_population
# wpk = Fraction of American white population killed by police each year
# wpk = .00000586 = 0.000586%
# The police kill about .000586% of the white American population every year
#####
bpk/wpk
# = 2.70979
# According to the data, black Americans are 2.7 times more likely to be killed by police officers
# American population = 328.2 million = 328200000
# 13% of Americans are black
b_pop = 328200000*.13
# b_pop = Black American population
# 62% of Americans are white
w_pop = 328200000*.62
# w_pop = White American population
#####
# The American police kill about 1000 people per year (rounding up)
# 25% of the reported people killed by police officers are black
bpk = (.25*1000)/b_pop
# bpk = Fraction of American black population killed by police each year
# bpk = .00000216 = 0.000216%
# The police kill about .000216% of the black American population every year
# 44% of the reported people killed by police officers are white
wpk = (.44*1000)/w_pop
# wpk = Fraction of American white population killed by police each year
# wpk = .00000586 = 0.000586%
# The police kill about .000586% of the white American population every year
#####
bpk/wpk
# = 2.70979
# According to the data, black Americans are 2.7 times more likely to be killed by police officers
install.packages("Matrix")
dbinom(50,100,0.4,lower.tail = FALSE, log.p = FALSE)
dbinom(50,100,0.4,lower.tail = FALSE)
dbinom(50,100,0.4,upper.tail = TRUE)
dbinom(50,100,0.4,upper.tail = 0)
dbinom(50,100,0.4,lower.tail = 0)
dbinom(50,100,40)
dbinom(50,100,40,log = FALSE)
dbinom(50,100,.40,log = FALSE)
1 - dbinom(50,100,.40,log = FALSE)
playGame(numGames = 1, warmup=TRUE)
playGame <- function( numGames = 1, warmup=FALSE, n=5e3, nPlot=80 ) {
cat(sprintf("We are playing %d games\n\n", numGames))
numCorrect <- 0
for (game in 1:numGames) {
cat(paste(rep("=",100), collapse= ""))
cat('\n')
theta.1 <- runif(1,min=-20,max=20) # uniform [-20,20]
phi.1   <- runif(1,min=-1,max=1) # uniform [-1,1]
x.1     <- arima.sim( n=n, model=list(ar=phi.1,ma=theta.1) )
theta.2 <- runif(1,min=-20,max=20) # uniform [-20,20]
phi.2   <- runif(1,min=-1,max=1) # uniform [-1,1]
x.2     <- arima.sim( n=n, model=list(ar=phi.2,ma=theta.2) )
options(repr.plot.width = 14,repr.plot.height = 10)
par(mfrow=c(2,2))
plot( x.1[1:nPlot], type='b',main="First time series")
plot( x.2[1:nPlot], type='b',main="Second time series")
flipPlots = as.logical( rbinom(1,1,1/2) )
if (flipPlots){
acf(x.2,main="ACF of first time series (?)")
acf(x.1,main="ACF of second time series (?)")
} else {
acf(x.1,main="ACF of first time series (?)")
acf(x.2,main="ACF of second time series (?)")
}
# Sys.sleep(0)
# devAskNewPage(TRUE)
# dev.flush()
# Ask for user to guess if plots have been flipped/switched around
if (!warmup){
# flush.console()
cat('Are the plots flipped?\n')
guess <- as.logical(readline(" T/F? > "))
# flush.console()
# devAskNewPage(FALSE)
if (guess == flipPlots){
numCorrect <- numCorrect + 1
cat("Nice job, you got it right!\n")
} else {
cat("Sorry, incorrect\n")
}
}
if (flipPlots){
cat('The plots **were switched**!\n')
} else {
cat('The plots were not switched\n')
}
cat(sprintf('  (First time series:  AR phi is %.1f, MA theta is %.1f)\n',phi.1,theta.1))
cat(sprintf('  (Second time series: AR phi is %.1f, MA theta is %.1f)\n',phi.2,theta.2))
cat(paste(rep("=",100), collapse= ""))
cat('\n')
}
if (!warmup){
cat(sprintf("You got %d of %d correct, for a %.1f%% rate", numCorrect, numGames, 100*numCorrect/numGames))
}
return(numCorrect)
}
playGame(numGames = 1, warmup=TRUE)
F
playGame <- function( numGames = 1, warmup=FALSE, n=5e3, nPlot=80 ) {
cat(sprintf("We are playing %d games\n\n", numGames))
numCorrect <- 0
for (game in 1:numGames) {
cat(paste(rep("=",100), collapse= ""))
cat('\n')
theta.1 <- runif(1,min=-20,max=20) # uniform [-20,20]
phi.1   <- runif(1,min=-1,max=1) # uniform [-1,1]
x.1     <- arima.sim( n=n, model=list(ar=phi.1,ma=theta.1) )
theta.2 <- runif(1,min=-20,max=20) # uniform [-20,20]
phi.2   <- runif(1,min=-1,max=1) # uniform [-1,1]
x.2     <- arima.sim( n=n, model=list(ar=phi.2,ma=theta.2) )
options(repr.plot.width = 14,repr.plot.height = 10)
par(mfrow=c(2,2))
plot( x.1[1:nPlot], type='b',main="First time series")
plot( x.2[1:nPlot], type='b',main="Second time series")
flipPlots = as.logical( rbinom(1,1,1/2) )
if (flipPlots){
acf(x.2,main="ACF of first time series (?)")
acf(x.1,main="ACF of second time series (?)")
} else {
acf(x.1,main="ACF of first time series (?)")
acf(x.2,main="ACF of second time series (?)")
}
# Sys.sleep(0)
# devAskNewPage(TRUE)
# dev.flush()
# Ask for user to guess if plots have been flipped/switched around
if (!warmup){
# flush.console()
cat('Are the plots flipped?\n')
guess <- as.logical(readline(" T/F? > "))
# flush.console()
# devAskNewPage(FALSE)
if (guess == flipPlots){
numCorrect <- numCorrect + 1
cat("Nice job, you got it right!\n")
} else {
cat("Sorry, incorrect\n")
}
}
if (flipPlots){
cat('The plots **were switched**!\n')
} else {
cat('The plots were not switched\n')
}
cat(sprintf('  (First time series:  AR phi is %.1f, MA theta is %.1f)\n',phi.1,theta.1))
cat(sprintf('  (Second time series: AR phi is %.1f, MA theta is %.1f)\n',phi.2,theta.2))
cat(paste(rep("=",100), collapse= ""))
cat('\n')
}
if (!warmup){
cat(sprintf("You got %d of %d correct, for a %.1f%% rate", numCorrect, numGames, 100*numCorrect/numGames))
}
return(numCorrect)
}
playGame(numGames = 1, warmup=FALSE)
clear
clc
source("~/Desktop/FA_22/research/data/prelim_proc.R")
source("~/Desktop/FA_22/research/data/prelim_proc.R")
source("~/Desktop/FA_22/research/data/prelim_proc.R")
source("~/Desktop/FA_22/research/data/prelim_proc.R")
